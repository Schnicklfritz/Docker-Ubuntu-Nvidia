name: Build and Publish CUDA Headless Image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      GHCR_REGISTRY: ghcr.io
      IMAGE_NAME: cuda-headless  # Changed from cuda-minimal
      OWNER: ${{ github.repository_owner }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,prefix={{branch}}-
            type=raw,value=13.0.1-ubuntu24.04

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Test image (basic checks)
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          set -e  # Exit on any error
          
          IMG="ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest"
          
          echo "Testing entrypoint script exists..."
          docker run --rm "$IMG" ls /usr/local/bin/entrypoint.sh
          
          echo "Testing Python version..."
          docker run --rm "$IMG" python3 --version
          
          echo "Testing Chrome installation..."
          docker run --rm "$IMG" google-chrome --version
          
          echo "Testing venv exists..."
          docker run --rm "$IMG" ls /home/admin/venv/bin/python3
          
          echo "Testing SSH server binary..."
          docker run --rm "$IMG" which sshd
          
          echo "âœ… All basic tests passed!"

      - name: Output image details
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "Images published:"
          echo "  GHCR: ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest"
          echo "  Docker Hub: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
          echo ""
          echo "Pull command:"
          echo "  docker pull ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest"
