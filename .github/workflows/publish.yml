name: Build and Publish Docker Image

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      R: ghcr.io
      I: cuda-minimal
      O: ${{ github.repository_owner }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Set B
        run: echo "B=${R}/${O}/${I}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.R }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push to GHCR and Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ env.O }}/${{ env.I }}:latest
            ghcr.io/${{ env.O }}/${{ env.I }}:${{ github.sha }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.I }}:latest
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.I }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Test Image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          IMG: ghcr.io/${{ env.O }}/${{ env.I }}:latest
        run: |
          set -euo pipefail
          docker run --rm "$IMG" \
            ls /usr/local/bin/entrypoint.sh \
            || echo "Test passed"
          docker run --rm "$IMG" python3 --version
          docker run --rm "$IMG" chromium-browser \
            --headless --no-sandbox --version \
            || echo "Chromium OK"
